@startuml
actor User
participant "HomepageScreen" as Homepage
participant "CameraScreen" as Camera
participant "DisplayPictureScreen" as Display
participant "ImagePicker/Camera" as Picker
participant ApiService
participant "FastAPI Server" as Server
participant "Materials Router/Controller" as addFunc
participant "Materials Service" as createFunc
participant Database

User -> Homepage: Tap "Upload a photo" or "Take a photo"
Homepage -> User: Show dialog with options
User -> Homepage: Select "Take a photo"
Homepage -> Camera: Navigate to CameraScreen
Camera -> Picker: Take photo
Picker -> Camera: Return photo
Camera -> Display: Navigate to DisplayPictureScreen with photo
User -> Display: Tap approval button
Display -> ApiService: Call addMaterial with base64 image
ApiService -> Server: Send POST request with base64 image
Server -> addFunc: Call add_material(MaterialCreate, Session)

addFunc -> User: Check if user is authenticated
alt User is not authenticated
    User -> addFunc: Raise HTTPException (401)
else User is authenticated
    User -> addFunc: User is authenticated
    addFunc -> createFunc: Call create_material(db, material, user['id'])
    createFunc -> Database: Interact with database to create new material record
    Database -> createFunc: Return newly created material
    createFunc -> addFunc: Return newly created material
end

addFunc -> Server: Return new material data
Server -> ApiService: Return HTTP response with new material data
ApiService -> Display: Return new material data
Display -> Homepage: Navigate back to HomepageScreen
Homepage -> User: Display new material in list
@enduml